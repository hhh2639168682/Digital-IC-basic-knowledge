# 设计规范


# 使用模块


**使用`define 定义的全局参数采用单独的文件存放**


**`include直接知名文件名，无须知名具体路径**

`include “blocka_include.vh”`


**常量用`parameter`定义，不用`define**


**block级别采用寄存器输出**


**例化要显氏引用**


**所有未连接的输入端口，必须连接到无效态，同时连接`_nc`后缀的信号**


**除封装代码，模块内部禁止使用工艺相关单元**


**通用模块单独划定**


**对非通用IPcore进行重新封装**


**关键时序逻辑不分割，放置到同一个module中**
*综合有跨层次优化的概念，如果保持层级结构，不利于分布在多个模块内的组合逻辑进行优化；同时，将关键路径放到指定的文件中，有助于针对该文件施加额外的约束*


**综合的hierarchy保持在2-3层**


# 使用赋值


**禁止在多个always中对同一个信号赋值**

**避免组合反馈环** 容易产生毛刺，振荡，时序违规

*通过编译后的warning查看*

![](media/17022841728143/17025363653890.png)


**不能给信号赋`x`**


**禁止使用`casex`和`casez`**


**每个always块只处理一个信号或者一组关系密切的信号**


**不要在同一个进程中采用并行的多if语句对同一个信号赋值**
``
if(state == 2’b00)
    begin
        dout = 1’b0;
    end
if(state == 2’b01)
    begin
        dout = 1’b01;
    end
``


**计数器归零时使用>=**
`if(cnt >= 5’h1f)`


**顶层禁止使用组合逻辑**


**双向io仅能出现在工程顶层或者io封装**


**门控时钟要使用专门的单元**
*使用`CBB/CKGATE`区分asic，fpga，palladium*

# 状态机

**设计中仔细考虑状态机是否有跑飞的风险**


# CBB


**复位相关，有CBB用CBB;跨时钟域必须用CBB**
*单bit打拍*

*脉冲握手跨时钟域*

*多位宽数据握手跨时钟域*

*格雷码跨时钟域*

*多位宽数据fifo跨时钟域*


**例化ram，必须用ram wrapper cbb**
*单口ram*

*双口ram*

*真双口ram*


**使用ram，读出数据必须要结合读使能**


**FIFO,读写控制必须考虑空满信号**


**使用fifo,读出数据必须结合读使能来使用**


